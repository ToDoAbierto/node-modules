#!/usr/bin/env node

var log = require('single-line-log');
var JSONStream = require('JSONStream');
var request = require('request');
var stream = require('stream-wrapper');
var pump = require('pump');
var after = require('after');
var mongo = require('./mongo');

var error = function(msg) {
	console.error(msg);
	process.exit(1);
};

var inc = 0;

console.log('== setting up dev environment ==\n');

mongo.open(function(err) {
	if (err) return error('could not connect to mongodb - are you sure it is installed and running?');

	var fetch = function() {
		console.log('fetching module updates from http://node-modules.com');

		mongo.meta.findOne({_id:'modules'}, function(err, meta) {
			var updated = meta && meta.updated || new Date(0);

			mongo.modules.find({}).sort({cached:-1}).limit(1).next(function(err, newest) {
				var cached = newest ? newest.cached : new Date(0);

				pump(
					request('http://node-modules.com/modules.json', {
						qs: {
							cached: cached.toISOString()
						}
					}),
					JSONStream.parse('*'),
					stream.writable({objectMode:true}, function(data, enc, callback) {
						data.cached = new Date(data.cached);
						data.created = new Date(data.created);
						data.updated = new Date(data.updated);
						if (data.updated > updated) updated = data.updated;

						var name = data._id;
						if (name.length > 20) name = name.slice(0, 20)+'...';

						log('updating #'+(++inc)+' ('+name+')');
						mongo.modules.save(data, callback);
					}),
					function() {
						mongo.meta.save({_id:'modules', updated:updated}, function() {
							console.log('modules are up-to-date');
							process.exit(0);
						});
					}
				);
			});
		});
	};

	console.log('ensuring database indexes');
	var next = after(5, fetch);

	mongo.modules.ensureIndex({cached:1}, next);
	mongo.modules.ensureIndex({cached:1, 'github.dependents':1}, next);
	mongo.modules.ensureIndex({cached:1, 'github.username':1}, next);
	mongo.modules.ensureIndex({'github.dependents':1}, next);
	mongo.modules.ensureIndex({'github.username':1}, next);

});